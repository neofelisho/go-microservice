version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:1.14
      - image: circleci/postgres:12-alpine
        environment: # environment variables for postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    working_directory: /go/src/github.com/neofelisho/go-microservices
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run: source env/env.sh docker
      - run: go get -v -t -d ./...
      - run: go vet -v ./...
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run: go test -v ./...
      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
  deploy:
    docker:
      - image: neofelis/circleci-eks:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker login to ECR
          command: |
            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO_URL}
      - run:
          name: Build docker images
          command: |
            docker build -f docker/grpc_server.Dockerfile -t ${ECR_REPO_URL}/${NAMESPACE}/grpc-server:${CIRCLE_SHA1} .
            docker build -f docker/restful_api.Dockerfile -t ${ECR_REPO_URL}/${NAMESPACE}/restful-api:${CIRCLE_SHA1} .
      - run:
          name: Push images to ECR
          command: |
            docker push ${ECR_REPO_URL}/${NAMESPACE}/grpc-server:${CIRCLE_SHA1}
            docker push ${ECR_REPO_URL}/${NAMESPACE}/restful-api:${CIRCLE_SHA1}
      - run:
          name: Get EKS authentication token
          command: |
            aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER_NAME}
      - run:
          name: Deploy to EKS
          command: |
            envsubst < k8s/grpc_server_deployment.yml | kubectl apply -f -
            envsubst < k8s/grpc_server_service.yml | kubectl apply -f -
            envsubst < k8s/restful_api_deployment.yml | kubectl apply -f -
            envsubst < k8s/restful_api_service.yml | kubectl apply -f -
            kubectl -n ${NAMESPACE} rollout status deployment/grpc-server
            kubectl -n ${NAMESPACE} rollout status deployment/restful-api

workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
